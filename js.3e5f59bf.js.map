{"version":3,"sources":["js/index.js"],"names":["CountdownTimer","selector","targetDate","daysEl","document","querySelector","hoursEl","minsEl","secsEl","DEALEY","intervalId","timeAnd","Date","now","days","Math","floor","hours","mins","secs","setInterval","onTick","getDaysHoursMinsSecsToEnd","textContent","countTimer","start"],"mappings":";AAyEA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAvEMA,IAAAA,EAAAA,WAEkC,SAAA,EAAA,GAAxBC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAc,EAAA,KAAA,GAC/BD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EAEbC,KAAAA,OAASC,SAASC,cAAc,KAAKJ,SAAW,wBAChDK,KAAAA,QAAUF,SAASC,cAAc,KAAKJ,SAAW,yBACjDM,KAAAA,OAASH,SAASC,cAAc,KAAKJ,SAAW,wBAChDO,KAAAA,OAASJ,SAASC,cAAc,KAAKJ,SAAW,wBAEhDQ,KAAAA,OAAS,IACTC,KAAAA,WAAa,KA2DtB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,4BArD8B,MAAA,WA8BnB,OA5BFC,KAAAA,QAAU,KAAKT,WAAaU,KAAKC,MA4B/B,CAAEC,KAtBIC,KAAKC,MAAM,KAAKL,QAAW,OAsBzBM,MAdDF,KAAKC,MAAO,KAAKL,QAAW,MAAyB,MAc7CO,KARTH,KAAKC,MAAO,KAAKL,QAAW,KAAoB,KAQjCQ,KAFfJ,KAAKC,MAAO,KAAKL,QAAW,IAAc,QAyB3D,CAAA,IAAA,QAnBU,MAAA,WAAA,IAAA,EAAA,KACDD,KAAAA,WAAaU,YAAY,WAAQ,EAAKC,OAAO,EAAKC,8BAAgC,KAAKb,UAkBhG,CAAA,IAAA,SAfoC,MAAA,SAAA,GAA1BK,IAAAA,EAAAA,EAAAA,KAAMG,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KACpBhB,KAAAA,OAAOoB,YAAcT,EACrBR,KAAAA,QAAQiB,YAAcN,EACtBV,KAAAA,OAAOgB,YAAcL,EACrBV,KAAAA,OAAOe,YAAcJ,MAW9B,EAvEMnB,GAkEAwB,EAAa,IAAIxB,EAAe,CACpCC,SAAU,WACVC,WAAY,IAAIU,KAAK,sBAGvBY,EAAWC","file":"js.3e5f59bf.js","sourceRoot":"..\\src","sourcesContent":["\r\n\r\nclass CountdownTimer {\r\n  \r\n  constructor({ selector, targetDate }) {\r\n    this.selector = selector;\r\n    this.targetDate = targetDate;\r\n    \r\n    this.daysEl = document.querySelector(this.selector + ' [data-value=\"days\"]');\r\n    this.hoursEl = document.querySelector(this.selector + ' [data-value=\"hours\"]');\r\n    this.minsEl = document.querySelector(this.selector + ' [data-value=\"mins\"]');\r\n    this.secsEl = document.querySelector(this.selector + ' [data-value=\"secs\"]');\r\n    \r\n    this.DEALEY = 1000;\r\n    this.intervalId = null;\r\n  }\r\n\r\n  \r\n\r\n\r\n  getDaysHoursMinsSecsToEnd() {\r\n\r\n    this.timeAnd = this.targetDate - Date.now();\r\n    /*\r\n   * Оставшиеся дни: делим значение UTC на 1000 * 60 * 60 * 24, количество\r\n   * миллисекунд в одном дне (миллисекунды * секунды * минуты * часы)\r\n   */\r\n    \r\n    const days = Math.floor(this.timeAnd / (1000 * 60 * 60 * 24));\r\n\r\n\r\n    /*\r\n     * Оставшиеся часы: получаем остаток от предыдущего расчета с помощью оператора\r\n     * остатка % и делим его на количество миллисекунд в одном часе\r\n     * (1000 * 60 * 60 = миллисекунды * минуты * секунды)\r\n     */\r\n    const hours = Math.floor((this.timeAnd % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n\r\n    /*\r\n     * Оставшиеся минуты: получаем оставшиеся минуты и делим их на количество\r\n     * миллисекунд в одной минуте (1000 * 60 = миллисекунды * секунды)\r\n     */\r\n    const mins = Math.floor((this.timeAnd % (1000 * 60 * 60)) / (1000 * 60));\r\n\r\n    /*\r\n     * Оставшиеся секунды: получаем оставшиеся секунды и делим их на количество\r\n     * миллисекунд в одной секунде (1000)\r\n     */\r\n    const secs = Math.floor((this.timeAnd % (1000 * 60)) / 1000);\r\n\r\n    return { days, hours, mins, secs };\r\n\r\n  }\r\n\r\n  start() {\r\n    this.intervalId = setInterval(() => { this.onTick(this.getDaysHoursMinsSecsToEnd()) }, this.DEALEY)\r\n   \r\n  }\r\n  onTick({days, hours, mins, secs}) {\r\n    this.daysEl.textContent = days;\r\n    this.hoursEl.textContent = hours;\r\n    this.minsEl.textContent = mins;\r\n    this.secsEl.textContent = secs;\r\n  \r\n  }\r\n  \r\n}\r\n\r\nconst countTimer = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('October 30, 2020'),\r\n});\r\n\r\ncountTimer.start();\r\n\r\n\r\n\r\n\r\n\r\n"]}